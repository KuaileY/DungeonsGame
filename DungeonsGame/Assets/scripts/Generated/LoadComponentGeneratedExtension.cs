//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        static readonly LoadComponent loadComponent = new LoadComponent();

        public bool isLoad {
            get { return HasComponent(InputComponentIds.Load); }
            set {
                if(value != isLoad) {
                    if(value) {
                        AddComponent(InputComponentIds.Load, loadComponent);
                    } else {
                        RemoveComponent(InputComponentIds.Load);
                    }
                }
            }
        }

        public Entity IsLoad(bool value) {
            isLoad = value;
            return this;
        }
    }

    public partial class Pool {

        public Entity loadEntity { get { return GetGroup(InputMatcher.Load).GetSingleEntity(); } }

        public bool isLoad {
            get { return loadEntity != null; }
            set {
                var entity = loadEntity;
                if(value != (entity != null)) {
                    if(value) {
                        CreateEntity().isLoad = true;
                    } else {
                        DestroyEntity(entity);
                    }
                }
            }
        }
    }
}

    public partial class InputMatcher {

        static IMatcher _matcherLoad;

        public static IMatcher Load {
            get {
                if(_matcherLoad == null) {
                    var matcher = (Matcher)Matcher.AllOf(InputComponentIds.Load);
                    matcher.componentNames = InputComponentIds.componentNames;
                    _matcherLoad = matcher;
                }

                return _matcherLoad;
            }
        }
    }
