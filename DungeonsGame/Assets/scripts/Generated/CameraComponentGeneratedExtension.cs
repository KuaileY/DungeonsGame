//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        static readonly CameraComponent cameraComponent = new CameraComponent();

        public bool isCamera {
            get { return HasComponent(CoreComponentIds.Camera); }
            set {
                if(value != isCamera) {
                    if(value) {
                        AddComponent(CoreComponentIds.Camera, cameraComponent);
                    } else {
                        RemoveComponent(CoreComponentIds.Camera);
                    }
                }
            }
        }

        public Entity IsCamera(bool value) {
            isCamera = value;
            return this;
        }
    }

    public partial class Pool {

        public Entity cameraEntity { get { return GetGroup(CoreMatcher.Camera).GetSingleEntity(); } }

        public bool isCamera {
            get { return cameraEntity != null; }
            set {
                var entity = cameraEntity;
                if(value != (entity != null)) {
                    if(value) {
                        CreateEntity().isCamera = true;
                    } else {
                        DestroyEntity(entity);
                    }
                }
            }
        }
    }
}

    public partial class CoreMatcher {

        static IMatcher _matcherCamera;

        public static IMatcher Camera {
            get {
                if(_matcherCamera == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.Camera);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherCamera = matcher;
                }

                return _matcherCamera;
            }
        }
    }
