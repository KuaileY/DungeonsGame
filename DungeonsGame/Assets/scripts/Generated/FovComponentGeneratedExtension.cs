//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        static readonly FovComponent fovComponent = new FovComponent();

        public bool isFov {
            get { return HasComponent(InputComponentIds.Fov); }
            set {
                if(value != isFov) {
                    if(value) {
                        AddComponent(InputComponentIds.Fov, fovComponent);
                    } else {
                        RemoveComponent(InputComponentIds.Fov);
                    }
                }
            }
        }

        public Entity IsFov(bool value) {
            isFov = value;
            return this;
        }
    }

    public partial class Pool {

        public Entity fovEntity { get { return GetGroup(InputMatcher.Fov).GetSingleEntity(); } }

        public bool isFov {
            get { return fovEntity != null; }
            set {
                var entity = fovEntity;
                if(value != (entity != null)) {
                    if(value) {
                        CreateEntity().isFov = true;
                    } else {
                        DestroyEntity(entity);
                    }
                }
            }
        }
    }
}

    public partial class InputMatcher {

        static IMatcher _matcherFov;

        public static IMatcher Fov {
            get {
                if(_matcherFov == null) {
                    var matcher = (Matcher)Matcher.AllOf(InputComponentIds.Fov);
                    matcher.componentNames = InputComponentIds.componentNames;
                    _matcherFov = matcher;
                }

                return _matcherFov;
            }
        }
    }
