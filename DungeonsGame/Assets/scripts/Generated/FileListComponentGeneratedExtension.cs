//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public FileListComponent fileList { get { return (FileListComponent)GetComponent(InputComponentIds.FileList); } }
        public bool hasFileList { get { return HasComponent(InputComponentIds.FileList); } }

        public Entity AddFileList(System.Collections.Generic.Dictionary<string, System.Xml.Linq.XDocument> newFileDic) {
            var component = CreateComponent<FileListComponent>(InputComponentIds.FileList);
            component.fileDic = newFileDic;
            return AddComponent(InputComponentIds.FileList, component);
        }

        public Entity ReplaceFileList(System.Collections.Generic.Dictionary<string, System.Xml.Linq.XDocument> newFileDic) {
            var component = CreateComponent<FileListComponent>(InputComponentIds.FileList);
            component.fileDic = newFileDic;
            ReplaceComponent(InputComponentIds.FileList, component);
            return this;
        }

        public Entity RemoveFileList() {
            return RemoveComponent(InputComponentIds.FileList);
        }
    }

    public partial class Pool {

        public Entity fileListEntity { get { return GetGroup(InputMatcher.FileList).GetSingleEntity(); } }
        public FileListComponent fileList { get { return fileListEntity.fileList; } }
        public bool hasFileList { get { return fileListEntity != null; } }

        public Entity SetFileList(System.Collections.Generic.Dictionary<string, System.Xml.Linq.XDocument> newFileDic) {
            if(hasFileList) {
                throw new EntitasException("Could not set fileList!\n" + this + " already has an entity with FileListComponent!",
                    "You should check if the pool already has a fileListEntity before setting it or use pool.ReplaceFileList().");
            }
            var entity = CreateEntity();
            entity.AddFileList(newFileDic);
            return entity;
        }

        public Entity ReplaceFileList(System.Collections.Generic.Dictionary<string, System.Xml.Linq.XDocument> newFileDic) {
            var entity = fileListEntity;
            if(entity == null) {
                entity = SetFileList(newFileDic);
            } else {
                entity.ReplaceFileList(newFileDic);
            }

            return entity;
        }

        public void RemoveFileList() {
            DestroyEntity(fileListEntity);
        }
    }
}

    public partial class InputMatcher {

        static IMatcher _matcherFileList;

        public static IMatcher FileList {
            get {
                if(_matcherFileList == null) {
                    var matcher = (Matcher)Matcher.AllOf(InputComponentIds.FileList);
                    matcher.componentNames = InputComponentIds.componentNames;
                    _matcherFileList = matcher;
                }

                return _matcherFileList;
            }
        }
    }
